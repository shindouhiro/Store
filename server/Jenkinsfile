pipeline {
    agent any
      tools {
       nodejs 'NodeJs 20.0.0'
    }
    
    stages {
        stage('Checkout') {
            steps {
                // 检出整个仓库到workspace
                checkout scm
                sh 'node -v'
                sh 'npm -v'
                sh 'docker --version'
            }
        }
        
        stage('Setup Environment') {
            steps {
                // 安装pnpm
                sh '''
                    # 检查Node.js版本
                    echo "🔍 Node.js版本: $(node --version)"
                    echo "🔍 npm版本: $(npm --version)"
                    
                    # 检查pnpm是否已安装
                    if ! command -v pnpm &> /dev/null; then
                        echo "📦 正在安装pnpm..."
                        npm install -g pnpm
                    else
                        echo "✅ pnpm已安装，版本: $(pnpm --version)"
                    fi
                '''
            }
        }
        
        stage('Install Dependencies') {
            steps {
                // 切换到server目录并安装依赖
                dir('server') {
                    sh '''
                        echo "📁 当前目录: $(pwd)"
                        echo "📦 安装依赖..."
                        pnpm install
                    '''
                }
            }
        }
        
        stage('Build') {
            steps {
                dir('server') {
                    sh '''
                        echo "🔨 开始构建..."
                        pnpm run build
                        echo "✅ 构建完成"
                    '''
                }
            }
        }
        
        stage('Docker Build & Deploy') {
            steps {
                dir('server') {
                    sh '''
                        echo "🐳 开始Docker构建和部署..."
                        chmod +x build.sh
                        ./build.sh
                    '''
                }
            }
        }
    }
    
    post {
        always {
            echo '🏁 Pipeline执行完成'
        }
        success {
            echo '✅ Pipeline执行成功！'
        }
        failure {
            echo '❌ Pipeline执行失败！'
        }
    }
}
