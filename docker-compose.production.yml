version: '3.8'

services:
  # MySQL 数据库服务
  mysql:
    image: mysql:8.0
    container_name: store-mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: nest_demo
      MYSQL_USER: nest_user
      MYSQL_PASSWORD: nest_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - store_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 10s
      retries: 30
      start_period: 120s

  # NestJS 后端服务
  server:
    image: shindouhiro/storeserver:latest
    container_name: store-server
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      -
    ports:
      - "3000:3000"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - store_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Next.js 管理后台
  admin:
    image: shindouhiro/storeadmin:latest
    container_name: store-admin
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USERNAME=nest_user
      - DB_PASSWORD=nest_password
      - DB_DATABASE=nest_demo
      # 客户端API地址 - 浏览器访问用
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-http://localhost:3000}
      # 服务端API地址 - SSR时使用
      - API_URL=http://server:3000
    ports:
      - "3001:3000"
    depends_on:
      - server
    networks:
      - store_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # 前端UI服务
  ui:
    image: shindouhiro/storeui:latest
    container_name: store-ui
    restart: unless-stopped
    environment:
      - NODE_ENV=production
    ports:
      - "80:80"
    depends_on:
      - server
    networks:
      - store_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx 反向代理 (可选)
  nginx:
    image: nginx:alpine
    container_name: store-nginx
    restart: unless-stopped
    ports:
      - "8080:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - server
      - admin
      - ui
    networks:
      - store_network

networks:
  store_network:
    driver: bridge
    name: store_network

volumes:
  mysql_data:
    driver: local 
